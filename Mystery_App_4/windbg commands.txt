1) attach WinDBG to the process
 * execute "g" to let the process continue while WinDBG stays attached
 * continue with the process until exception happens
 * first "pause" will be at first chance exception - let it continue, press "g"
 * when second chance exception occurs:
	** .loadby sos coreclr -> initialize SOS commands so we can analyze .Net memory dump
	** execute !analyze -v -> this will display all kinds of exception related information
	** execute .exr -1 -> display more exception related information
	** find "FAULTING THREAD" line and record the number (something like FAULTING_THREAD:  00002114)
	** execute ~~[<thread number>]s, then !clrstack and see WHERE exactly the exception happened

note: use <sxe av> to make sure that WinDBG breaks on first-chance and second-chance Access Violation Exceptions, 
and <sxd av> to break only on second-chance exceptions
first-chance means exception is thrown but there is no catch block to handle it